import type { FetchFunction } from "@ai-sdk/provider-utils";

export type OpenAIModelId =
  | "gpt-4o"
  | "gpt-4o-mini"
  | "o1-preview"
  | "o1-mini"
  | "gpt-4-turbo"
  | "gpt-4-turbo-preview"
  | "gpt-4"
  | "gpt-3.5-turbo";

export type MistralModelId =
  | "mistral-large-latest"
  | "pixtral-large-latest"
  | "ministral-3b-latest"
  | "ministral-8b-latest"
  | "mistral-small-latest"
  | "codestral-latest"
  | "pixtral-12b-2409" // free model
  | "open-mistral-nemo" // free model
  | "open-codestral-mamba"; // free model

export type AnthropicModelId =
  | "claude-3-5-sonnet-latest"
  | "claude-3-5-haiku-latest"
  | "claude-3-opus-latest"
  | "claude-3-sonnet-20240229"
  | "claude-3-haiku-20240307";

export type EdgeDBChatModelId =
  | OpenAIModelId
  | MistralModelId
  | AnthropicModelId
  | (string & {});

export function isAnthropicModel(model: EdgeDBChatModelId): boolean {
  return (
    model === "claude-3-5-sonnet-latest" ||
    model === "claude-3-5-haiku-latest" ||
    model === "claude-3-haiku-20240307" ||
    model === "claude-3-sonnet-20240229" ||
    model === "claude-3-opus-20240229"
  );
}

export function isOpenAIModel(model: EdgeDBChatModelId): boolean {
  return (
    model === "gpt-4o" ||
    model === "gpt-4o-mini" ||
    model === "gpt-4-turbo-preview" ||
    model === "gpt-4-turbo" ||
    model === "gpt-3.5-turbo" ||
    model === "gpt-4"
  );
}

export type Prompt =
  | { name: string; custom?: EdgeDBMessage[] }
  | { id: string; custom?: EdgeDBMessage[] }
  | { custom: EdgeDBMessage[] };

export interface QueryContext {
  query: string;
  variables?: Record<string, unknown>;
  globals?: Record<string, unknown>;
  max_object_count?: number;
}

export interface EdgeDBChatConfig {
  provider: string;
  fetch: FetchFunction;
}

export interface EdgeDBChatSettings {
  context?: QueryContext;
  prompt?: Prompt;

  // Mistral only:

  /**
Whether to inject a safety prompt before all conversations.
Defaults to `false`.
   */
  safePrompt?: boolean;

  // OpenAI only

  /**
Echo back the prompt in addition to the completion.
   */
  echo?: boolean;

  /**
Modify the likelihood of specified tokens appearing in the completion.

Accepts a JSON object that maps tokens (specified by their token ID in
the GPT tokenizer) to an associated bias value from -100 to 100. You
can use this tokenizer tool to convert text to token IDs. Mathematically,
the bias is added to the logits generated by the model prior to sampling.
The exact effect will vary per model, but values between -1 and 1 should
decrease or increase likelihood of selection; values like -100 or 100
should result in a ban or exclusive selection of the relevant token.

As an example, you can pass {"50256": -100} to prevent the <|endoftext|>
token from being generated.
   */
  logitBias?: Record<number, number>;

  /** 
Return the log probabilities of the tokens. Including logprobs will increase
the response size and can slow down response times. However, it can
be useful to better understand how the model is behaving.

Setting to true will return the log probabilities of the tokens that
were generated.

Setting to a number will return the log probabilities of the top n
tokens that were generated.
   */
  logprobs?: boolean | number;

  /** 
A unique identifier representing your end-user, which can help OpenAI to
monitor and detect abuse. Learn more.
   */
  user?: string;

  // Anthropic only:

  // Enable Anthropic cache control (beta feature). This will add the beta header and
  // allow you to use provider-specific cacheControl metadata.
  // cacheControl?: boolean;
}

export type EdgeDBMessage =
  | EdgeDBSystemMessage
  | EdgeDBUserMessage
  | EdgeDBAssistantMessage
  | EdgeDBToolMessage;

export interface EdgeDBSystemMessage {
  role: "system";
  content: string;
}

export interface EdgeDBUserMessage {
  role: "user";
  content: { type: "text"; text: string }[];
}

export interface EdgeDBAssistantMessage {
  role: "assistant";
  content: string;
  tool_calls?: {
    id: string;
    type: "function";
    function: { name: string; arguments: string };
  }[];
}

export interface EdgeDBToolMessage {
  role: "tool";
  content: string;
  tool_call_id: string;
}
