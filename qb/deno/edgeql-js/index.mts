export * from "./syntax/external.mjs";
export * from "./types.mjs";
export { createClient } from "edgedb";
import { $, _edgedbJsVersion } from "edgedb";
import * as $syntax from "./syntax/syntax.mjs";
import * as $op from "./operators.mjs";
import _std from "./modules/std.mjs";
import _cal from "./modules/cal.mjs";
import _cfg from "./modules/cfg.mjs";
import _default from "./modules/default.mjs";
import _schema from "./modules/schema.mjs";
import _sys from "./modules/sys.mjs";
import _math from "./modules/math.mjs";
import __7 from "./modules/_7.mjs";
import _extra from "./modules/extra.mjs";

if (_edgedbJsVersion !== "0.20.10") {
  throw new Error(
    `The query builder was generated by a different version of edgedb-js (v0.20.10)` +
      ` than the one currently installed (v${_edgedbJsVersion}).\n` +
      `Run 'npx edgeql-js' to re-generate a compatible version.\n`
  );
}

const ExportDefault: typeof _std & 
  typeof _default & 
  $.util.OmitDollarPrefixed<typeof $syntax> & 
  typeof $op & {
  "std": typeof _std;
  "cal": typeof _cal;
  "cfg": typeof _cfg;
  "default": typeof _default;
  "schema": typeof _schema;
  "sys": typeof _sys;
  "math": typeof _math;
  "ðŸ’¯ðŸ’¯ðŸ’¯": typeof __7;
  "extra": typeof _extra;
} = {
  ..._std,
  ..._default,
  ...$.util.omitDollarPrefixed($syntax),
  ...$op,
  "std": _std,
  "cal": _cal,
  "cfg": _cfg,
  "default": _default,
  "schema": _schema,
  "sys": _sys,
  "math": _math,
  "ðŸ’¯ðŸ’¯ðŸ’¯": __7,
  "extra": _extra,
};
const Cardinality = $.Cardinality;
type Cardinality = $.Cardinality;
export type Set<
  Type extends $.BaseType,
  Cardinality extends $.Cardinality = $.Cardinality.Many
> = $.TypeSet<Type, Cardinality>;


export default ExportDefault;
export { Cardinality };
