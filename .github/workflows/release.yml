name: Release
on:
  push:
    branches:
      - "master"
    paths:
      - "package.json"
jobs:
  validate-release-request:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.checkver.outputs.version }}
    steps:
      - name: Validate release PR
        uses: edgedb/action-release/validate-pr@master
        id: checkver
        with:
          github_token: ${{ secrets.RELEASE_BOT_GITHUB_TOKEN }}
          require_team: Release Managers
          require_approval: no  # approval not required for publish
          missing_version_ok: yes
          version_file: package.json
          version_line_pattern: |
            "version"\s*:\s*"([[:SEMVER:]])"

  build_and_publish:
    needs: validate-release-request
    runs-on: ubuntu-latest
    if: needs.validate-release-request.outputs.version != 0
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
          submodules: true

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install deps and build
        run: |
          yarn install
          yarn build

      - name: Merge and tag the PR
        uses: edgedb/action-release/merge@master
        with:
          github_token: ${{ secrets.RELEASE_BOT_GITHUB_TOKEN }}
          ssh_key: ${{ secrets.RELEASE_BOT_SSH_KEY }}
          gpg_key: ${{ secrets.RELEASE_BOT_GPG_KEY }}
          gpg_key_id: "5C468778062D87BF!"
          tag_name: v${{ needs.validate-release-request.outputs.version }}

      - name: Publish Github Release
        uses: elprans/gh-action-create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.validate-release-request.outputs.version }}
          release_name: v${{ needs.validate-release-request.outputs.version }}
          target: ${{ github.event.pull_request.base.ref }}
          body: ${{ github.event.pull_request.body }}
          draft: true

      - name: Publish to NPM
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
          npm publish --dry-run
