name: Tests

on:
  push:
    branches:
      - master
      - ci
  pull_request:
    branches:
      - master

jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.checkver.outputs.version }}
    steps:
      - name: Check if release PR.
        uses: edgedb/action-release/validate-pr@master
        id: checkver
        with:
          github_token: ${{ secrets.RELEASE_BOT_GITHUB_TOKEN }}
          missing_version_ok: yes
          version_file: package.json
          version_line_pattern: |
            "version"\s*:\s*"([[:SEMVER:]])"

  test:
    needs: prep
    # Skip tests when doing a release to avoid the workflow race
    # when the release PR gets merged by the bot.
    if: needs.prep.outputs.version == 0
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: ["12", "13", "14", "15", "16"]
        os: [ubuntu-latest]
        edgedb-version: ["stable"]
        include:
          - os: ubuntu-latest
            node-version: "16"
            edgedb-version: "nightly"
          - os: macos-latest
            node-version: "16"
            edgedb-version: "stable"
          - os: windows-latest
            node-version: "16"
            edgedb-version: "stable"

    steps:
      - name: Setup WSL
        if: ${{ matrix.os == 'windows-latest' }}
        uses: vampire/setup-wsl@v1
        with:
          wsl-shell-user: edgedb
          additional-packages: ca-certificates
            curl

      - uses: actions/checkout@v1
        with:
          fetch-depth: 50
          submodules: true

      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.14.x

      - name: Install dev deps
        run: |
          yarn install
          cd qb && yarn install

      - name: Lint
        run: |
          yarn lint

      - name: Build
        run: |
          yarn build

      - name: Compile for Deno
        run: |
          yarn compileForDeno

      - name: Install EdgeDB
        uses: edgedb/setup-edgedb@v1
        with:
          server-version: ${{ matrix.edgedb-version }}

      - name: Run functional tests
        run: |
          yarn test

      - name: Run query builder tests
        working-directory: qb
        run: |
          yarn test:ci

  # This job exists solely to act as the test job aggregate to be
  # targeted by branch policies.
  regression-tests:
    name: "Regression Tests"
    needs: [test]
    if: ${{ needs.test.result == "success" || needs.test.result == "skipped" }}
    runs-on: ubuntu-latest
    steps:
      - run: echo OK
